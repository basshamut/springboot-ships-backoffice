spring:

  jackson:
    default-property-inclusion: NON_NULL

  resources:
    add-mappings: true

  banner:
    location: classpath:banner.txt

  datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:mem:demo_db;MODE=Mysql
    username: root
    password: 12345
    initialization-mode: always

  jpa:
    hibernate:
      ddl-auto: none
    generate-ddl: false
    open-in-view: false
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true

  h2:
    console:
      enabled: true
      path: /console

  flyway:
    enabled: true
    locations: classpath:/migrations

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: ships-consumer-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    streams:
      application-id: ship-streams-app
      bootstrap-servers: localhost:9092
      default-key-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      default-value-serde: org.apache.kafka.common.serialization.Serdes$StringSerde

# Management endpoints configuration for Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,httptrace,env
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
    tags:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans

# Logging configuration for observability
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"